These are the list utilities:

list_init VAR                        # initialize VAR as an empty list

list_add      VAR VAL1 [VAL2 ...]    # add VAL1.. to the end of VAR

list_add_once VAR  VAL1 [VAL2 ..]    # add VAL1.. uniquely to the end of VAR

add_list      VAR VAL1 [VAL2 ...]    # alias to list_add

add_list_once VAR VAL ...            # alias to list_add_once

list_push VAR VAL ...                # alias to list_add

push_list VAR VAL ...                # alias to list_add

list_insert      VAR VAL ...         # insert VAL.. at the front of VAR

list_insert_once VAR VAL ...         # insert VAL.. at the front of VAR;

insert_list      VAR VAL ...         # alias to list_insert

insert_list_once VAR VAL ...         # alias to list_insert_once

list_pop VAR                         # removes top VAL on VAR and returns in variable "item"

pop_list VAR                         # an alias to list_pop

list_get  VAR N                      # get the Nth item of VAR to stdout

list_item VAR N                      # set 'item' to the Nth item of VAR

list_set  VAR N VAL                  # set the Nth item of VAR to VAL

list_items VAR [START [END]]         # return list items from START to END (or all)

list_copy LIST NEWLIST [START [END]] # copy list LIST to NEWLIST, from START to END

in_list VAR  [-any|-all] VAL ...     # return true if one or more values are in a list

list_size VAR                        # returns the number of items

sort_str VAL ...                     # sort the space-separated words of VAL ..

sort_list VAR                        # sort the contents of VAR (a list) in place

sorted_list VAR                      # output the items of VAR sorted

sort_str2lines                       # sort STR with each item in a separate line

sort_list2lines                      # sort LIST with each item in a separate line

split_into  VAR "STRING" SEP         # split "STRING" by SEP into VAR

split_str   "STRING" [SEP]           # split "STRING" by SEP

join_list VAR [SEP] ..               # join the items in VAR into a list, separated by SEP,
  SEP can be
    AND    -- separate with " and "
    OR     -- separate with " or "
    KEYS   -- enclose each item with X' and ', follwed by ','
    TAB    -- use tabs to separate items
    NL     -- separate each item with newline (and some spaces)
    NOWRAP -- do not auto-wrap long lines (default is WRAP)
    ','    -- separate items with a comma (default)
    str    -- separate each item with an given string.

join_lines                           # read STDIN and catenate lines; remove trailing NL

lookup_list LISTVAR KEY              # lookup KEY in LISTVAR

grep_list   LISTVAR PAT              # grep PAT across LISTVAR

map_list    LISTVAR EXPR [JOINSTR]   # create a list of EXPR applied to each item in LISTVAR

reduce_list LISTVAR EXPR [INIT]      # reduce LISTVAR using EXPR, with initial value INIT

sum_list LISTVAR                     # sum the items in LISTVAR

max_list LISTVAR                     # return the maximum item in LISTVAR

min_list LISTVAR                     # return the minimum item in LISTVAR

avg_list LISTVAR                     # return the average of the items in LISTVAR

print_list LISTVAR [indent=INDENT] [width=WIDTH] [sep=SEP] [cols=COLS]

print_list LISTVAR [i=INDENT] [w=WIDTH] [s=SEP]  [c=COLS]

    print the items in LIST in vertically-sorted columns.  Use COLS if given,
    otherwise the number of columns is computed from WIDTH (defaults to 80) and
    the maximum width of all the items in LISTVAR

list_help                             # describe the list functions

